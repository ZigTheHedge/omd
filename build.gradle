buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        repositories {
            maven {
                url "https://plugins.gradle.org/m2/"

            }
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'com.github.johnrengelman.shadow'

version = '1.16.5-1.1.3'
group = 'com.cwelth.omd' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'omd'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://mvnrepository.com/artifact/org.glassfish.tyrus.bundles'
    }
    flatDir {
        dirs 'libs\\'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

shadowJar {
    configurations = [project.configurations.embed]
    relocate 'org.glassfish', 'shaded.glassfish'
    relocate 'javax.websocket', 'shaded.websocket'
    classifier = ''
}

reobf {
    shadowJar {
    }
}
artifacts {
    archives tasks.shadowJar
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.30'

    //implementation 'javax.websocket:javax.websocket-client-api:1.1'
    //implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.9'

    /*
    compile 'javax.websocket:javax.websocket-client-api:1.1'
    */
    compile 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.9'

    //embed 'javax.websocket:javax.websocket-client-api:1.1'
    embed 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.9'

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "omd",
            "Specification-Vendor": "ZigTheHedge",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"ZigTheHedge",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
